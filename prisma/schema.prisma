generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name     String?   @map("name")
  country       String?   @map("country")
  email         String    @unique
  hashedPassword String?   @map("hashed_password")
  emailVerified DateTime? @map("email_verified")
  image         String?
  plxCount      Int?    @map("plx_count")
  accounts      Account[]
  sessions      Session[]
  @@map("users")
}

model Account {
  id                String  @id @default(uuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model VisaApplication {
  id              String   @id @default(uuid())
  userId          String   @map("user_id")
  personalInfo    Json     @map("personal_info")
  passportInfo    Json     @map("passport_info")
  childInfo       Json     @map("child_info")
  travelInfo      Json     @map("travel_info")
  contactInfo     Json     @map("contact_info")
  declarations    Json     @map("declarations")
  documentUpload  Json     @map("document_upload")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}